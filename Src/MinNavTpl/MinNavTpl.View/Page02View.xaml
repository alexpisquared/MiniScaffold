<UserControl x:Class="MinimalNavTemplate.View.Page02View" x:Name="wnd" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:stb="clr-namespace:CI.Visual.Lib.Helpers;assembly=CI.Visual.Lib" 
             xmlns:cnv="clr-namespace:CI.Visual.Lib.Converters;assembly=CI.Visual.Lib" 
             xmlns:vms="clr-namespace:MinimalNavTemplate.VM.VMs;assembly=MinimalNavTemplate.VM" d:DataContext="{d:DesignInstance Type=vms:Page02VM}" 
             d:DesignHeight="200" d:DesignWidth="800" Padding="8" Background="#1f00" Loaded="OnLoaded">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/CI.Visual.Lib;component/Base/BasicDefaultsLayout.xaml" />
        <!--<ResourceDictionary Source="/CI.Visual.Lib;component/Base/ComboBox.Base.xaml" />-->
        <ResourceDictionary Source="/CI.Visual.Lib;component/Base/DataGrid.Base.xaml" />
        <ResourceDictionary Source="/CI.Visual.Lib;component/Base/DataGrid.Anime.xaml" />
        <!--
        <ResourceDictionary Source="/CI.Visual.Lib;component/Base/ComboBoxStyle_IsEditable.xaml" />
        <ResourceDictionary Source="/CI.Visual.Lib;component/ColorScheme/Theme.Color.Dark.Gray.xaml" />-->
      </ResourceDictionary.MergedDictionaries>

      <Style TargetType="{x:Type TextBlock}"  BasedOn="{StaticResource TbkVCenteredInfoClr}" />

      <Style TargetType="ToggleButton">
        <Setter Property="VerticalAlignment"          Value="Center"  />
        <Setter Property="HorizontalAlignment"        Value="Center"  />
        <Setter Property="BorderThickness"            Value="0"  />
        <Setter Property="Height"                     Value="20"  />
        <Setter Property="Margin"                     Value="0"  />
        <Setter Property="Padding"                    Value="-22"  />
        <Setter Property="Background"                 Value="#aaa"  />
        <Style.Resources>
          <Style TargetType="Border">
            <Setter Property="CornerRadius"     Value="8" />
          </Style>
        </Style.Resources>
      </Style>

      <CollectionViewSource x:Key="_aplnViewSource"/>
      <CollectionViewSource x:Key="_permViewSource"/>
      <CollectionViewSource x:Key="_userViewSource"/>

      <sys:Double x:Key="blur">0</sys:Double>

      <CollectionViewSource x:Key="_accountRequestViewSource"/>

      <Style x:Key="RightAlignStyle"   TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Right"	/>
      </Style>
      <Style x:Key="CenterAlignStyle"  TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Center" />
      </Style>
      <Style x:Key="CenterAlignChkBox" TargetType="{x:Type CheckBox}">
        <Setter Property="HorizontalAlignment" Value="Center" />
      </Style>

      <SineEase    x:Key="si"     EasingMode="EaseIn" />
      <SineEase    x:Key="so"     EasingMode="EaseOut" />
      <SineEase    x:Key="sb"     EasingMode="EaseInOut" />
      <CubicEase   x:Key="co"     EasingMode="EaseOut" />
      <CubicEase   x:Key="ci"     EasingMode="EaseIn" />
      <CubicEase   x:Key="cb"     EasingMode="EaseInOut" />
      <QuarticEase x:Key="qo"     EasingMode="EaseOut" />
      <QuarticEase x:Key="qi"     EasingMode="EaseIn" />
      <QuarticEase x:Key="qb"     EasingMode="EaseInOut" />
      <BackEase    x:Key="ko"     EasingMode="EaseOut" />
      <BackEase    x:Key="ki"     EasingMode="EaseIn" />
      <BackEase    x:Key="kb"     EasingMode="EaseInOut" />
      <ElasticEase x:Key="ei"     EasingMode="EaseIn" />
      <ElasticEase x:Key="eo"     EasingMode="EaseOut" />
      <ElasticEase x:Key="eb"     EasingMode="EaseInOut" />
      <ElasticEase x:Key="eo0s5"  EasingMode="EaseOut" Oscillations="0" Springiness="5" />
      <ElasticEase x:Key="eo2s5"  EasingMode="EaseOut" Oscillations="2" Springiness="5" />
      <BounceEase  x:Key="bo"     EasingMode="EaseOut" />
      <Color x:Key="c">#1f00</Color>
      <Color x:Key="a">#3f00</Color>
      <Color x:Key="b">#1f00</Color>
      <Color x:Key="e">#10f0</Color>
      <Color x:Key="f">#00f0</Color>
      <LinearGradientBrush x:Key="rf1" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop x:Name="GradientStop1a" Color="{StaticResource c}" Offset="0.0" />
        <GradientStop x:Name="GradientStop2a" Color="{StaticResource a}" Offset="0.50" />
        <GradientStop x:Name="GradientStop3"  Color="{StaticResource b}" Offset="1.0" />
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="rf2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop x:Name="GradientStop3a" Color="{StaticResource f}" Offset="0.0" />
        <GradientStop x:Name="GradientStop3e" Color="{StaticResource e}" Offset="0.50" />
        <GradientStop x:Name="GradientStop3d" Color="{StaticResource f}" Offset="1.0" />
      </LinearGradientBrush>

      <Storyboard x:Key="CompositeFlashing"   Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" >
        <ColorAnimation  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" From="Red" To="Yellow" EasingFunction="{StaticResource eo}"/>
        <DoubleAnimation Storyboard.TargetProperty="Opacity"                              From="0.3" To="1"      EasingFunction="{StaticResource eo}"/>
      </Storyboard>
      <Storyboard x:Key="ColorFlashing"       Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" >
        <ColorAnimation  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" From="Orange" To="Yellow" EasingFunction="{StaticResource so}"/>
      </Storyboard>
      <Storyboard x:Key="OpacityFlashing"     Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" >
        <DoubleAnimation Storyboard.TargetProperty="Opacity"                              From="0.3" To="1"      EasingFunction="{StaticResource sb}"/>
      </Storyboard>
      <Storyboard x:Key="CompositeRestored"   Duration="0:0:1" FillBehavior="Stop" >
        <ColorAnimation  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="Transparent" />
        <DoubleAnimation Storyboard.TargetProperty="Opacity"                              To="1"           />
      </Storyboard>
      <Storyboard x:Key="ColorRestored"       Duration="0:0:1" FillBehavior="Stop">
        <ColorAnimation  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="Transparent" />
      </Storyboard>
      <Storyboard x:Key="OpacityRestored"     Duration="0:0:1" FillBehavior="Stop">
        <DoubleAnimation Storyboard.TargetProperty="Opacity"                              To="1"           />
      </Storyboard>

      <Style x:Key="AnimOpacityDataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
          <DataTrigger Binding="{Binding Path=IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource ColorFlashing}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource ColorRestored}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="AnimOpacityDataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
          <DataTrigger Binding="{Binding Path=IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource ColorFlashing}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource ColorRestored}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>

      <Style x:Key="awesomeStyleRadlDiag" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{StaticResource awesomeBkGrRadl}" />
        <Style.Triggers>
          <DataTrigger Binding="{Binding Path=IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardRadl}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardStop}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="awesomeDataGridCellStyle" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{StaticResource awesomeBkGrDiag}" />
        <Style.Triggers>
          <DataTrigger Binding="{Binding Path=IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardDiag}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardStop}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="awesomeDataGridRowStyle" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{StaticResource awesomeBkGrVert}" />
        <Style.Triggers>
          <DataTrigger Binding="{Binding Path=IsStatusOutstandingAndNoUser}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardVert}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard Storyboard="{StaticResource awesomeBkGrStoryboardStop}"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Style.Triggers>
      </Style>

      <Style TargetType="DataGridRow">
        <Setter Property="DetailsVisibility" Value="Collapsed"/>
        <!--<Setter Property="Background" Value="Lavender"/>-->
        <Style.Triggers>
          <DataTrigger Binding="{Binding Granted}" Value="True">
            <Setter Property="ToolTip" Value="Permissions granted. Click check-mark to revoke."/>
            <Setter Property="Background" Value="#10f0"/>
          </DataTrigger>
          <DataTrigger Binding="{Binding Selectd}" Value="True">
            <Setter Property="ToolTip" Value="Adjust permissions by clicking V/X in the Granted column"/>
            <Setter Property="Background" Value="#04e"/>
            <Setter Property="Foreground" Value="Yellow"/>
          </DataTrigger>
          <DataTrigger Binding="{Binding Granted}" Value="False">
            <Setter Property="ToolTip" Value="No permissions granted. Click  X-mark  to grant."/>
            <!--<Setter Property="Background" Value="Transparent"/>-->
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <DataTemplate x:Key="LookTemplate">
        <Grid >
          <!--
        <Grid          Background="{Binding Granted, UpdateSourceTrigger=PropertyChanged, Converter={cnv:BoolToColorConverter}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                          Content="{Binding Granted, UpdateSourceTrigger=PropertyChanged}"
          -->
          <ToggleButton IsChecked="{Binding Granted, UpdateSourceTrigger=PropertyChanged}" Click="OnTogglePermission" HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBlock       Text="{Binding Granted, UpdateSourceTrigger=PropertyChanged, Converter={cnv:BoolToCharConverter}}" FontFamily="Wingdings" FontSize="26"
                       Foreground="{Binding Granted, UpdateSourceTrigger=PropertyChanged, Converter={cnv:BoolToColorConverter}}" />
          </ToggleButton>
        </Grid>
      </DataTemplate>

    </ResourceDictionary>
  </UserControl.Resources>
  <Grid>
    <Grid x:Name="ZommablePanel" Tag="//tu: Grid with round corners!!! => must be a Style.">
      <Grid.Resources>
        <Style TargetType="{x:Type Border}">
          <Setter Property="CornerRadius"     Value="4"/>
          <Setter Property="Padding"          Value="5"/>
          <Setter Property="Background"       Value="{StaticResource BackBackgroundBrush}" />
          <Setter Property="Opacity"          Value=".9002" />
        </Style>
      </Grid.Resources>
      <Grid.RowDefinitions>
        <RowDefinition Height="40"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="2"/>
        <RowDefinition Height="0"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <Grid Grid.Row="3" Grid.RowSpan="2" Margin="8">
        <Border>
          <Border.Effect>
            <DropShadowEffect ShadowDepth="2" Color="#000" BlurRadius="6" />
          </Border.Effect>
        </Border>
        <Border>
          <Border.Effect>
            <DropShadowEffect ShadowDepth="2" Color="#fff" BlurRadius="6" Direction="135" />
          </Border.Effect>
        </Border>
      </Grid>
      <Rectangle Grid.Row="3" Margin="8 8 8 0" >
        <Rectangle.Fill>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#2fff" Offset="0"/>
            <GradientStop Color="#2000" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Fill>
      </Rectangle>
      <Grid Grid.Row="6" Grid.RowSpan="1" Margin="8">
        <Border>
          <Border.Effect>
            <DropShadowEffect ShadowDepth="2" Color="#000" BlurRadius="6" />
          </Border.Effect>
        </Border>
        <Border>
          <Border.Effect>
            <DropShadowEffect ShadowDepth="2" Color="#fff" BlurRadius="6" Direction="135" />
          </Border.Effect>
        </Border>
      </Grid>

      <TextBlock Text="BMS Original" FontSize="20" Margin="19 0"/>
      <TextBlock Text="{Binding Report}" FontSize="11" Foreground="{StaticResource MainForegroundBrush}" HorizontalAlignment="Center" VerticalAlignment="Top" d:Text="Hello. Is everything OK?" Margin="0" Visibility="{Binding Report, Converter={cnv:ReportToVisibilityConverter InvertValue=False}}" />
      <!--<TextBlock Text="{Binding AllowWriteDB,        StringFormat='{}Db Wr: {0}'}"  HorizontalAlignment="Center" />-->

      <Menu  Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0 12 12 0">
        <Grid>
          <Button   Width="120" Margin="8 0" Content="             _Refresh" IsDefault="True" Command="{Binding RefreshFromDbCommand}"/>
          <CheckBox Width="70" Margin="16 2 0 0"  Content="A_uto"    x:Name="chkIsPlaying" Checked="ChkIsPlaying_Checked" Unchecked="ChkIsPlaying_Unchecked"/>
        </Grid>
        <CheckBox Content="SQL Synchrony"    IsChecked="{Binding AutoSyncToSqlRoles}" ToolTip="Auto-Synchronize to native SQL DB Roles" />
        <MenuItem Header="  ° ° °  "  VerticalAlignment="Bottom" >
          <MenuItem Header="_Chk  DB MVVM" Height="26" Command="{Binding CheckDbCommand}" />
          <MenuItem Header="_Save DB MVVM" Height="26" Command="{Binding Save2DbCommand}" />
          <MenuItem Header="_Chk  DB CoBe" Height="26" Click="OnChkDb"/>
          <MenuItem Header="_Save DB CoBe" Height="26" Click="OnSave"  ToolTip="Save to DB if dirty" />
          <MenuItem Header="_Add me"       Height="26" Click="OnAddMe" ToolTip="Add me to the list of users" x:Name="btnAddMe" />
        </MenuItem>
      </Menu>

      <Grid Grid.Row="3" Margin="18 8 8 4" x:Name="spc1" HorizontalAlignment="Stretch" Visibility="Visible">
        <Grid.Effect>
          <BlurEffect Radius="{Binding IsBusy, Converter={cnv:UniConverter InvertValue=False}}" d:Radius="0" />
        </Grid.Effect>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="3*" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Label    Grid.Column="1" Content="_Application " Target="{Binding ElementName=cbxApps}" FontSize="14"/>
        <ComboBox Grid.Column="2" FontSize="18" BorderThickness=".5" Height="30" x:Name="cbxApps" Margin="14 8" 
                  ItemsSource="{Binding AplnViewSource}" SelectedValue="{Binding PrefAplctnId}" SelectedValuePath="AppId" DisplayMemberPath="AppName" />
      </Grid>

      <Grid Grid.Row="4" Margin="10">
        <Grid.Effect>
          <BlurEffect Radius="{Binding IsBusy, Converter={cnv:UniConverter InvertValue=False}}" d:Radius="0" />
        </Grid.Effect>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="1"/>
          <ColumnDefinition Width="2*"/>
          <ColumnDefinition Width="10"/>
          <ColumnDefinition Width="3*"/>
          <ColumnDefinition Width="1"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
          <RowDefinition Height="1"/>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--<TextBlock Grid.Column="1" x:Name="pfu" d:Text="Perm for User" Foreground="Blue" FontWeight="Medium" FontSize="18" HorizontalAlignment="Center" />
          <TextBlock Grid.Column="3" x:Name="ufp" d:Text="user for perm" Foreground="Blue" FontWeight="Medium" FontSize="18" HorizontalAlignment="Center" />-->

        <DataGrid Grid.Row="3" Grid.Column="1" ItemsSource="{Binding PermViewSource}" SelectionUnit="Cell" SelectedCellsChanged="DgPerm_SelectedCellsChanged" CanUserAddRows="True" x:Name="dgPerm" >
          <DataGrid.Columns>
            <DataGridTextColumn     Header="Permission Name" Binding="{Binding Name}"  Width="*"/>
            <DataGridTemplateColumn Header="Granted" CellTemplate="{StaticResource LookTemplate}" x:Name="colPG"/>
          </DataGrid.Columns>
        </DataGrid>

        <DataGrid Grid.Row="3" Grid.Column="3" ItemsSource="{Binding UserViewSource}" SelectionUnit="Cell" SelectedCellsChanged="DgUser_SelectedCellsChanged" CanUserAddRows="True" x:Name="dgUser" >
          <DataGrid.Columns>
            <!--
              <DataGridTextColumn     Header="***" Width="32"/>
              <DataGridTextColumn     Header="User Name" Binding="{Binding UserId}"      Width="*"/>
              <DataGridTemplateColumn Header="Granted" CellTemplate="{StaticResource LookTemplate}" x:Name="colUG"/>              -->
            <DataGridTextColumn     Header="User Name" Binding="{Binding UserId}"      Width="*">
              <DataGridTextColumn.HeaderTemplate>
                <DataTemplate>
                  <StackPanel Orientation="Horizontal" Margin="4 0" >
                    <Label    Content="_Search " Target="{Binding ElementName=sch}"/>
                    <TextBox  Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.SearchText, UpdateSourceTrigger=PropertyChanged}" Width="100" x:Name="sch" />
                  </StackPanel>
                </DataTemplate>
              </DataGridTextColumn.HeaderTemplate>
              <!--<DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <stb:HighlightableTextBlock Text="{Binding UserId}" SearchText="{Binding Text, ElementName=tbxUsrSearch}" ToolTip="{Binding Notes}" />
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>-->
            </DataGridTextColumn>

            <DataGridTemplateColumn                                       x:Name="colUG" >
              <DataGridTemplateColumn.HeaderTemplate>
                <DataTemplate>
                  <StackPanel Orientation="Horizontal" Margin="4 0" HorizontalAlignment="Right">
                    <CheckBox Content="Members _Only" IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.MemberFilter}" ToolTip="Show Members Only"       />
                  </StackPanel>
                </DataTemplate>
              </DataGridTemplateColumn.HeaderTemplate>
              <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                  <Grid >
                    <ToggleButton IsChecked="{Binding Granted, UpdateSourceTrigger=PropertyChanged}" Click="OnTogglePermission" HorizontalAlignment="Center" VerticalAlignment="Center"
                                  IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.AllowWriteDB}">
                      <TextBlock       Text="{Binding Granted, UpdateSourceTrigger=PropertyChanged, Converter={cnv:BoolToCharConverter}}" FontFamily="Wingdings" FontSize="26"
                                 Foreground="{Binding Granted, UpdateSourceTrigger=PropertyChanged, Converter={cnv:BoolToColorConverter}}" />
                    </ToggleButton>
                  </Grid>
                </DataTemplate>
              </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
          </DataGrid.Columns>
        </DataGrid>

        <GridSplitter Grid.Column="2" Grid.RowSpan="2" />

      </Grid>
    </Grid>
  </Grid>
</UserControl>
